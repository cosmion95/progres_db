CREATE OR REPLACE PACKAGE BODY TERT_MANAGEMENT AS

  procedure add_punct_lucru(p_tert number, p_denumire varchar2, p_telefon varchar2, p_domeniu number, p_localitate number, p_strada varchar2, p_nr_strada varchar2, p_cuvinte_cheie varchar2 default null, p_rata_prezenta varchar2 default null) AS
  BEGIN
    if p_tert is null then
        demo.raise_error('A aparut o eroare la transmiterea tertului.');
    end if;
    if p_denumire is null then
        demo.raise_error('Denumirea este obligatorie.');
    elsif p_domeniu is null then
        demo.raise_error('Domeniul este obligatoriu.');
    elsif p_telefon is null then
        demo.raise_error('Numarul de telefon este obligatoriu.');
    elsif p_localitate is null then
        demo.raise_error('Localitatea este obligatorie.');
    elsif p_strada is null then
        demo.raise_error('Strada este obligatorie.');
    elsif p_nr_strada is null then
        demo.raise_error('Numarul strazii este obligatoriu.');
    end if;
    insert into puncte_lucru(id, tert_id, denumire, telefon, domeniu_id, localitate_id, strada, nr_strada, cuvinte_cheie)
        values(progres_id.nextval, p_tert, p_denumire, p_telefon, p_domeniu, p_localitate, p_strada, p_nr_strada, p_cuvinte_cheie);
  END add_punct_lucru;

  procedure add_program(p_punct_lucru number, p_zi number, p_ora_start number, p_ora_final number) AS
  BEGIN
    if p_punct_lucru is null then
        demo.raise_error('A aparut o eroare la transmiterea punctului de lucru.');
    end if;
    if p_zi is null then
        demo.raise_error('Va rugam alegeti o zi.');
    elsif p_ora_start is null or p_ora_final is null then
        demo.raise_error('Va rugam alegeti ora de inceput si de sfarsit a programului de lucru.');
    end if;
    insert into program(id, punct_lucru_id, zi_program_nr, ora_start, ora_final)
        values(progres_id.nextval, p_punct_lucru, p_zi, p_ora_start, p_ora_final);
  END add_program;

  procedure add_exceptie_program(p_punct_lucru number, p_data date, p_ora_start number, p_ora_final number) AS
  BEGIN
    if p_punct_lucru is null then
        demo.raise_error('A aparut o eroare la transmiterea punctului de lucru.');
    end if;
    if p_data is null then
        demo.raise_error('Va rugam alegeti o data');
    elsif p_ora_start is null or p_ora_final is null then
        demo.raise_error('Va rugam alegeti ora de inceput si de sfarsit a programului de lucru.');
    end if;
    insert into exceptii_program(id, punct_lucru_id, data, ora_start, ora_final)
        values(progres_id.nextval, p_punct_lucru, p_data, p_ora_start, p_ora_final);
  END add_exceptie_program;

  procedure add_tip_rezervare(p_punct_lucru number, p_denumire varchar2, p_durata number, p_validare_automata varchar2, p_creat_de number) AS
  BEGIN
    if p_punct_lucru is null then
        demo.raise_error('A aparut o eroare la transmiterea punctului de lucru.');
    end if;
    if p_denumire is null then
        demo.raise_error('Va rugam sa completati denumirea.');
    elsif p_durata is null then
        demo.raise_error('Durata este obligatorie.');
    elsif p_creat_de is null then
        demo.raise_error('Eroare la transmiterea tertului.');
    end if;
    insert into tipuri_rezervare(id, denumire, validare_automata, durata, punct_lucru_id, creat_de, creat_la)
        values(progres_id.nextval, p_denumire, nvl(p_validare_automata, 'N'), p_durata, p_punct_lucru, p_creat_de, sysdate);
  END add_tip_rezervare;
  
  procedure add_angajat(p_punct_lucru number, p_nume varchar2, p_prenume varchar2, p_username varchar2, p_parola varchar2, p_functie varchar2, p_telefon varchar2, p_manager varchar2 default 'N') is
  begin
    if p_punct_lucru is null then
        demo.raise_error('Eroare la transmiterea punctului de lucru.');
    end if;
    if p_nume is null or p_prenume is null then
        demo.raise_error('Numele si prenumele este obligatoriu.');
    elsif p_username is null or p_parola is null then
        demo.raise_error('Username-ul si parola este obligatorie.');
    elsif p_functie is null then
        demo.raise_error('Functia este obligatorie.');
    elsif p_telefon is null then
        demo.raise_error('Telefonul este obligatoriu.');
    end if;
    insert into angajati(id, punct_lucru_id, nume, prenume, username, parola, telefon, functie, manager)
        values(progres_id.nextval, p_punct_lucru, p_nume, p_prenume, p_username, p_parola, p_telefon, p_functie, p_manager);
  end add_angajat;
  
  function get_puncte_lucru(p_localitate number, p_domeniu number, p_cuvinte_cheie varchar2) return clob is
  -- filtreaza si intoarce o lista cu punctele de lucru
  v_clob clob := '[';
  cursor c is
  select p.id, p.denumire, p.telefon, p.strada, p.nr_strada, p.zile_rezervari_max, d.id dom_id, d.denumire dom_denumire, d.icon_id dom_icon_id, d.font_family dom_font_family
    from puncte_lucru p, domenii d
    where p.localitate_id = p_localitate
    and p.domeniu_id = d.id
    and (p.domeniu_id = p_domeniu or p_domeniu is null)
    and (tert_management.verifica_cuvinte_cheie(p.denumire, p.cuvinte_cheie, p_cuvinte_cheie) = 'D' or p_cuvinte_cheie is null);
  begin
    for r in c loop
        v_clob := v_clob || '{"id":' || r.id || ',"denumire":"' || r.denumire || '","telefon":"' || r.telefon || '","strada":"' ||
        r.strada || '","nr_strada":"' || r.nr_strada || '", "zile_rezervari_max":' || r.zile_rezervari_max || ',"dom_id":' || r.dom_id || ',"dom_denumire":"' || 
        r.dom_denumire || '", "dom_icon_id":' || r.dom_icon_id || ',"dom_font_family":"' || r.dom_font_family || '"},';
    end loop;
    v_clob := substr(v_clob, 0, length(v_clob)-1);
    v_clob := v_clob || ']';
    return v_clob;
  end get_puncte_lucru;
  
  function verifica_cuvinte_cheie(p_denumire_punct varchar2, p_cuvinte_punct varchar2, p_cuvinte_cautate varchar2) return varchar2 is
  -- verifica cuvintele cheie de la punctul de lucru cu cele cautate de client
    v_caut varchar2(512) := p_cuvinte_punct;
    v_denumire varchar2(256) := p_denumire_punct;
    v_cuvinte_cheie varchar2(64) := p_cuvinte_cautate;
    v_nr_cuvinte number(10);
    v_start_pos number(10) := 0;
    v_final_pos number(10);
    v_cuvant varchar2(64);
    v_gasit number(10) := 0;
    begin
        v_cuvinte_cheie := trim(v_cuvinte_cheie);
        select regexp_count(v_cuvinte_cheie, ' ')+1 into v_nr_cuvinte from dual;
        if v_nr_cuvinte > 1 then
        for i in 1..v_nr_cuvinte loop
          if i = 1 then
            select instr(v_cuvinte_cheie, ' ', 1, i) into v_final_pos from dual;
            select substr(v_cuvinte_cheie, v_start_pos, v_final_pos-v_start_pos-1) into v_cuvant from dual;
          elsif i = v_nr_cuvinte then
            select instr(v_cuvinte_cheie, ' ', 1, i-1) into v_start_pos from dual;
            select instr(v_cuvinte_cheie, ' ', 1, i) into v_final_pos from dual;
            select substr(v_cuvinte_cheie, v_start_pos+1, length(v_cuvinte_cheie) - v_start_pos) into v_cuvant from dual;
          else
            select instr(v_cuvinte_cheie, ' ', 1, i-1) into v_start_pos from dual;
            select instr(v_cuvinte_cheie, ' ', 1, i) into v_final_pos from dual;
            select substr(v_cuvinte_cheie, v_start_pos+1, v_final_pos-v_start_pos-1) into v_cuvant from dual;
          end if;
          if length(v_cuvant) > 0 then
            v_cuvant := upper(v_cuvant);
            select count(*) into v_gasit from dual where upper(v_caut) like ('%' || v_cuvant || '%') or upper(v_denumire) like ('%' || v_cuvant || '%');
            if v_gasit  > 0 then
             return 'D';
            end if;
          end if;
        end loop;
        else
          select count(*) into v_gasit from dual where upper(v_caut) like ('%' || upper(v_cuvinte_cheie) || '%') or upper(v_denumire) like ('%' || upper(v_cuvinte_cheie) || '%');
          if v_gasit  > 0 then
             return 'D';
        end if;
        end if;
    return 'N';
  end verifica_cuvinte_cheie;
  
  function get_program_punct(p_punct number) return clob is
  --intoarce programul de lucru al punctului incepand de azi si mergand pana la nr max zile stabilite la nivelul punctului
  v_clob clob := '[';
  cursor c is
    select x.data_gasita, x.ora_start, x.ora_final from (
    with dates as (select sysdate + ROWNUM - 1 data_gasita
                      from dual 
                   connect by sysdate + ROWNUM - 1 <= sysdate+(select zile_rezervari_max from puncte_lucru where id = p_punct))
    select to_char(d.data_gasita, 'DD.MM.YYYY') data_gasita, nvl(ep.ora_start, pr.ora_start) ora_start, nvl(ep.ora_final, pr.ora_final) ora_final
    from dates d left join exceptii_program ep on trunc(d.data_gasita) = trunc(ep.data) and ep.punct_lucru_id = p_punct, program pr
    where pr.punct_lucru_id = p_punct
    and pr.zi_program_nr = to_number(to_char(d.data_gasita, 'd'))) x
    group by x.data_gasita, x.ora_start, x.ora_final
    order by x.data_gasita, x.ora_start;
  begin
    for r in c loop
        v_clob := v_clob || '{"data":"' || r.data_gasita || '","ora_start":"' || r.ora_start || '","ora_final":"' || r.ora_final || '"},';
    end loop;
    v_clob := substr(v_clob, 0, length(v_clob)-1);
    v_clob := v_clob || ']';
    return v_clob;
  end get_program_punct;
  
  function get_urmatoarea_zi_lucratoare(p_punct number) return varchar2 is
  -- intoarce data urmatoarei zi lucratoare a punctului de lucru din momentul apelului
  v_return varchar2(128);
   cursor c is
    select x.data_gasita, x.ora_start, x.ora_final from (
    with dates as (select sysdate + ROWNUM - 1 data_gasita
                      from dual 
                   connect by sysdate + ROWNUM - 1 <= sysdate+(select zile_rezervari_max from puncte_lucru where id = p_punct))
    select d.data_gasita data_gasita, nvl(ep.ora_start, pr.ora_start) ora_start, nvl(ep.ora_final, pr.ora_final) ora_final
    from dates d left join exceptii_program ep on trunc(d.data_gasita) = trunc(ep.data) and ep.punct_lucru_id = p_punct, program pr
    where pr.punct_lucru_id = p_punct
    and pr.zi_program_nr = to_number(to_char(d.data_gasita, 'd'))) x
    where ((trunc(sysdate) = trunc(x.data_gasita) and to_number((to_char(sysdate, 'hh24') || '.' || to_number(to_char(sysdate, 'mi')))) < x.ora_final) or trunc(x.data_gasita) > trunc(sysdate))
    group by x.data_gasita, x.ora_start, x.ora_final
    order by x.data_gasita, x.ora_start;
    r c%rowtype;
  begin
    open c;
    fetch c into r;
    if c%found then
      v_return := '{"data":"' || to_char(r.data_gasita, 'DD.MM.YYYY') || '"}';
    end if;
    return v_return;
  end get_urmatoarea_zi_lucratoare;
  
  function get_procent_ocupare(p_punct number, p_data varchar2) return varchar2 is
  -- intoarce cat % de ocupat este punctul de lucru la data transmisa
    v_total_minute number(10) := 0;
    v_min_rezerv number(10) := 0;
    v_procent number(10) := 0;
    v_min_start number(10) := 0;
    v_min_final number(10) := 0;
    cursor c_total is
      select x.* from
    (select nvl(ep.ora_start, p.ora_start) ora_start, nvl(ep.ora_final, p.ora_final) ora_final
    from program p left join exceptii_program ep on ep.punct_lucru_id = p.punct_lucru_id and trunc(ep.data) = trunc(to_date(p_data, 'DD.MM.YYYY'))
    where p.punct_lucru_id = p_punct
    and p.zi_program_nr = to_number(to_char(to_date(p_data, 'DD.MM.YYYY'), 'd'))) x
    group by x.ora_start, x.ora_final
    order by x.ora_start;
    cursor c_rez is
      select sum(durata) durata from calendar_rezervari where punct_lucru_id = p_punct and trunc(data_ora) = trunc(to_date(p_data, 'DD.MM.YYYY')) and anulata = 'N' and validata = 'D';
    r_rez c_rez%rowtype;
    begin
      for r in c_total loop
        v_min_start := v_min_start + floor(r.ora_start)*60 + (r.ora_start - floor(r.ora_start))*100;
        v_min_final := v_min_final + floor(r.ora_final)*60 + (r.ora_final - floor(r.ora_final))*100;
        v_total_minute := v_total_minute + (v_min_final - v_min_start);
      end loop;
      open c_rez;
      fetch c_rez into r_rez;
      if c_rez%found and r_rez.durata is not null then
        v_min_rezerv := r_rez.durata;
      else
        v_min_rezerv := 0;
      end if;
      if v_total_minute > 0 then
        v_procent := 100 - ((v_min_rezerv*100)/v_total_minute);
      end if;
      return '{"procent":"' || to_char(100 - v_procent) || '"}';
  end get_procent_ocupare;
  
  function get_program_neeligibil(p_punct number, p_client number) return clob is
    v_pauze clob := '[';
    v_ora_pauza_start number;
    v_ora_pauza_final number;
    v_ora_prog_start number;
    v_ora_prog_final number;
    v_count_pauze number := 0;
    v_zi_lucratoare number := 0;
    v_ora_start_rez number;
    v_ora_final_rez number;
    v_tip varchar2(32);
    v_subiect varchar2(32);
    cursor c_date is
     with dates as (select sysdate + ROWNUM - 1 data_gasita
                          from dual 
                       connect by sysdate + ROWNUM - 1 <= sysdate+(select zile_rezervari_max from puncte_lucru where id = p_punct))
        select d.data_gasita data_gasita from dates d;
    
    cursor c_program(p_data date) is 
        select x.ora_start, x.ora_final from 
        (select nvl(ep.ora_start, pr.ora_start) ora_start, nvl(ep.ora_final, pr.ora_final) ora_final
        from program pr left join exceptii_program ep on ep.punct_lucru_id = pr.punct_lucru_id and trunc(ep.data) = trunc(p_data)
        where pr.punct_lucru_id = p_punct
        and pr.zi_program_nr = to_number(to_char(p_data, 'd')))x
        group by x.ora_start, x.ora_final
        order by x.ora_start;
        
    cursor c_rezervari(p_data date) is
        select cd.data_ora, cd.durata 
          from calendar_rezervari cd
         where cd.punct_lucru_id = p_punct
           and trunc(cd.data_ora) = trunc(p_data) 
           and cd.validata = 'D' 
           and cd.anulata = 'N' 
           and client_id <> p_client;
    
     cursor c_rezervari_proprii(p_data date) is
        select cd.id rezervare_id, cd.data_ora, cd.durata, cd.validata, cd.anulata, nvl(tr.denumire, substr(cd.mesaj, 0, 31)) subiect
          from calendar_rezervari cd left join tipuri_rezervare tr on cd.tip_rezervare_id = tr.id
         where cd.punct_lucru_id = p_punct 
           and trunc(cd.data_ora) = trunc(p_data) 
           and cd.client_id  = p_client;
    begin
      for r_data in c_date loop
        v_zi_lucratoare := 0;
        -- adaug pauzele din timpul programului de lucru
        for r_prog in c_program(r_data.data_gasita) loop
        v_zi_lucratoare := 1;
        if v_count_pauze = 0 then
            v_ora_pauza_start := r_prog.ora_final;
            v_ora_prog_final := r_prog.ora_start;
            v_subiect := 'Inchis';
            v_pauze := v_pauze || '{"data":"' || to_char(r_data.data_gasita, 'DD.MM.YYYY') || '","subiect":"' || v_subiect || '","tip":"pauza_out","ora_start":' || 0 || ',"ora_final":' || r_prog.ora_start || '},';
        else
            if v_ora_pauza_start is null then
                v_ora_pauza_start := r_prog.ora_final;
            end if;
            if v_ora_pauza_final is null then
                v_ora_pauza_final := r_prog.ora_start;
                v_subiect := 'Pauza';
                v_pauze := v_pauze || '{"data":"' || to_char(r_data.data_gasita, 'DD.MM.YYYY') || '","subiect":"' || v_subiect || '","tip":"pauza_in","ora_start":' || v_ora_pauza_start || ',"ora_final":' || v_ora_pauza_final || '},';
                v_ora_pauza_start := r_prog.ora_final;
                v_ora_pauza_final := null;
            end if;
        end if;
        v_count_pauze := v_count_pauze + 1;
        v_ora_prog_start := r_prog.ora_final;
      end loop;
      v_count_pauze := 0;
      for r_rez in c_rezervari(r_data.data_gasita) loop
        select to_number(to_char(r_rez.data_ora, 'HH24')) +  to_number(to_char(r_rez.data_ora, 'MI'))/100
          into v_ora_start_rez from dual;
        select to_number(to_char(r_rez.data_ora + (1/1440*r_rez.durata), 'HH24')) + to_number(to_char(r_rez.data_ora + (1/1440*r_rez.durata), 'MI'))/100
          into v_ora_final_rez from dual;
        v_subiect := 'Rezervare';
        v_pauze := v_pauze || '{"data":"' || to_char(r_data.data_gasita, 'DD.MM.YYYY') || '","subiect":"' || v_subiect || '","tip":"rezervare","ora_start":' || v_ora_start_rez || ',"ora_final":' || v_ora_final_rez || '},';
      end loop;
      for r_rez in c_rezervari_proprii(r_data.data_gasita) loop
        select to_number(to_char(r_rez.data_ora, 'HH24')) +  to_number(to_char(r_rez.data_ora, 'MI'))/100
          into v_ora_start_rez from dual;
        select to_number(to_char(r_rez.data_ora + (1/1440*r_rez.durata), 'HH24')) + to_number(to_char(r_rez.data_ora + (1/1440*r_rez.durata), 'MI'))/100
          into v_ora_final_rez from dual;
        if r_rez.anulata = 'D' then
            v_tip := 'proprie_anulata';
        elsif r_rez.validata = 'D' and r_rez.anulata = 'N' then
            v_tip := 'proprie_validata';
        else
            v_tip := 'proprie_trimisa';
        end if;
        v_subiect := r_rez.subiect;
        v_pauze := v_pauze || '{"data":"' || to_char(r_data.data_gasita, 'DD.MM.YYYY') || '","subiect":"' || v_subiect || '","tip":"' || v_tip || '","ora_start":' || v_ora_start_rez || ',"ora_final":' || v_ora_final_rez || ',"rezervare_id":' || r_rez.rezervare_id || '},';
      end loop;
      -- adaug pauze in afara programului de lucru
      v_subiect := 'Inchis';
      if v_zi_lucratoare = 0 then
        v_pauze := v_pauze || '{"data":"' || to_char(r_data.data_gasita, 'DD.MM.YYYY') || '","subiect":"' || v_subiect || '","tip":"zi_nelucratoare","ora_start":' || 0 || ',"ora_final":' || 24 || '},';
      else
        v_pauze := v_pauze || '{"data":"' || to_char(r_data.data_gasita, 'DD.MM.YYYY') || '","subiect":"' || v_subiect || '","tip":"pauza_out","ora_start":' || v_ora_prog_start || ',"ora_final":' || 24 || '},';
      end if;
      end loop;
       v_pauze := substr(v_pauze, 0, length(v_pauze)-1);
       v_pauze := v_pauze || ']';
        return v_pauze;
  end get_program_neeligibil;
  
  function get_tipuri_rezervare(p_punct number) return clob is
  -- intoarce toate tipurile de rezervari definite la punctul de lucru
  v_clob clob := '[';
  cursor c_tip is
    select id, denumire, durata from tipuri_rezervare where punct_lucru_id = p_punct;
  begin
    for r_tip in c_tip loop
        v_clob := v_clob || '{"id":' || r_tip.id || ',"denumire":"' || r_tip.denumire || '","durata":' || r_tip.durata || '},';
    end loop;
    v_clob := substr(v_clob, 0, length(v_clob)-1);
    v_clob := v_clob || ']';
    return v_clob;
  end get_tipuri_rezervare;


END TERT_MANAGEMENT;
/
